equery = require "../lib/equery"

class Caller extends equery

  contracts:
    foo:
      address: "0x85b0cbba9753e65749056c9f7c17ffd10d39cfea"
      interface: [{"constant":false,"inputs":[{"name":"a","type":"int256"},{"name":"b","type":"bool"},{"name":"c","type":"string"}],"name":"settle_exec","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"settle_init","outputs":[],"type":"function"},{"inputs":[{"name":"_o","type":"address"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"a","type":"int256"},{"indexed":false,"name":"b","type":"bool"},{"indexed":false,"name":"c","type":"string"}],"name":"received","type":"event"}]
  users:
    me: "0xded6e05815d0febd7e01e47ae818c8854ad42e2d"
  is_primary: false

  constructor: (query_handler) ->
    super()

    @foo.received.listen (args...) =>
      console.log "COMPLETE!"
      console.log(args...)

    @wait ()=>
      console.log "requesting"
      @foo.settle_init (ret)-> console.log ret

  stop: ()-> @listen.stop()
  wait: (cb)=> setTimeout((()=>cb()),1000)

module.exports = Caller
