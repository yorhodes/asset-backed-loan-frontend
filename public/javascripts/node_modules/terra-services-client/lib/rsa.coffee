class rsa
  constructor: ()->
    @NodeRSA = require('node-rsa')
    @priv = false
    @pub = false
    @sec = 2048
  format:
    strip:(string)-> string.split("\n").slice(1,-1).join("\n")
    decorate:(type,string)->
      switch type
        when "private" then return @header.private+"\n"+string+"\n"+@footer.private
        when "public" then return @header.public+"\n"+string+"\n"+@footer.public
    header:
      public: "-----BEGIN PUBLIC KEY-----"
      private: "-----BEGIN RSA PRIVATE KEY-----"
    footer:
      public: "-----END PUBLIC KEY-----"
      private: "-----END RSA PRIVATE KEY-----"
  gen:() ->
    key = new @NodeRSA b: @sec
    @priv = key
    @pub = key
  set_private: (privkey) =>
    @priv = new @NodeRSA
    @priv.importKey @format.decorate("private",privkey), "private"
  set_public: (pubkey) =>
    @pub = new @NodeRSA
    @pub.importKey @format.decorate("public",pubkey), "public"
  private: () => @format.strip @priv.exportKey "private"
  public: () => @format.strip @pub.exportKey "public"
  encrypt: (string) -> @pub.encrypt string, 'base64'
  decrypt: (string) -> @priv.decrypt string, 'utf8'

module.exports = rsa
